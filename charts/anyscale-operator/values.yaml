# cloudDeploymentId specifies the cloud deployment ID of the AOP.
cloudDeploymentId: ""

# cloudProvider specifies the cloud provider that the AOP is running on.
# Supported values are "aws" and "gcp".
cloudProvider: ""

# An Anyscale CLI Token. If set, the Anyscale Operator will use this token to authenticate with the Anyscale control plane.
# If not set, the Anyscale Operator will attempt to bootstrap using a native cloud provider identity (only supported on AWS/GCP).
anyscaleCliToken: ""

# External secrets configuration for retrieving secrets from external secret management systems.
# This allows creating multiple ExternalSecret resources for different credential types.
externalSecrets:
  # Anyscale CLI token secret configuration
  - name: "anyscale-cli-token"
    enabled: false
    # ClusterSecretStore name for external secret store access
    clusterSecretStore: ""
    # Refresh interval for the external secret
    refreshInterval: "1h"
    # Secret key mappings from external store to Kubernetes secret
    secretKeys:
      - remoteKey: ""  # The key in the external secret store
        secretKey: "ANYSCALE_CLI_TOKEN"  # The key name in the created Kubernetes secret
  
  # AWS credentials secret configuration for object storage access
  - name: "aws-credentials"
    enabled: false
    # ClusterSecretStore name for external secret store access
    clusterSecretStore: ""
    # Refresh interval for the external secret
    refreshInterval: "1h"
    # Secret key mappings from external store to Kubernetes secret
    secretKeys:
      - remoteKey: ""  # The key in the external secret store for AWS_ACCESS_KEY_ID
        secretKey: "AWS_ACCESS_KEY_ID"
      - remoteKey: ""  # The key in the external secret store for AWS_SECRET_ACCESS_KEY
        secretKey: "AWS_SECRET_ACCESS_KEY"

# region specifies the region that the Kubernetes cluster is running in.
region: ""

# operatorImage specifies the Docker image to use for the Anyscale Operator.
operatorImage: "public.ecr.aws/v0b8w7e3/anyscale/kubernetes_manager:ci-bbdd5c6b3eb955e144f0a15f6f5366a30d2a8012"

# operatorIamIdentity specifies the IAM identity from the cloud provider to bind to the Anyscale Operator.
# This is only supported on AWS/GCP. For AWS, this should be the ARN of the IAM role. For GCP, this should be the email of the
# service account. If not set, the Anyscale Operator will use the IAM identity of the Kubernetes node.
operatorIamIdentity: ""

# operatorResources specifies the resource limits and requests for Anyscale Operator deployment.
operatorResources:
  # 'operator' is the container for the Anyscale Operator.
  operator:
    requests:
      memory: 512Mi
      cpu: 1
    limits:
      memory: 2Gi
  # 'vector' is a sidecar used to forward telemetry (operator logs/metrics) to the Anyscale Control Plane.
  vector:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      memory: 512Mi

operatorReplicas: 1

# operatorExcludeComponentVerification allows specifying components to skip verification for during the
# operator startup sequence.
#
# Valid values are:
#  - STORAGE_BUCKET
#
# By default, all components will be verified during the operator startup sequence.
operatorExcludeComponentVerification: []

# operatorNodeSelection allows configuring where the Anyscale Operator pods are scheduled.
# Either nodeSelector or affinity can be specified
# If both are specified, nodeSelector takes precedence.
operatorNodeSelection:
  # nodeSelector is a map of key-value pairs used for basic node selection
  nodeSelector: {}
  # affinity allows for more complex node selection rules
  affinity: {}
  # tolerations allow the operator pod to schedule on nodes with matching taints
  tolerations: []

# defaultInstanceTypes provides a list of default Pod shapes that can be
# used in Anyscale workloads (abstracted as virtual "instance types").
#
# Node selectors that apply specifically to these instance types can be
# placed directly under each instance type under the `nodeSelector` key.
defaultInstanceTypes:
  2CPU-8GB:
    resources:
      CPU: 2
      memory: 8Gi
  4CPU-16GB:
    resources:
      CPU: 4
      memory: 16Gi
  8CPU-32GB:
    resources:
      CPU: 8
      memory: 32Gi
  8CPU-32GB-1xT4:
    resources:
      CPU: 8
      GPU: 1
      memory: 32Gi
      'accelerator_type:T4': 1
  # Uncomment the following values if you are on GKE & want to use TPU node groups.
  # These are examples; many other TPU configurations & topologies are supported.
  #
  # 8CPU-16GB-TPU-V5E-2x2-SINGLEHOST:
  #   resources:
  #     CPU: 8
  #     TPU: 4
  #     memory: 16Gi
  #     'accelerator_type:TPU-V5E': 1
  #     # Hint to Anyscale that this is a single-host deployment.
  #     'anyscale/tpu_hosts': 1
  #   nodeSelector:
  #     cloud.google.com/gke-tpu-accelerator: tpu-v5-lite-podslice
  #     cloud.google.com/gke-tpu-topology: 2x2
  #     cloud.google.com/gke-spot: "true"
  # 8CPU-16GB-TPU-V5E-4x4-MULTIHOST:
  #   resources:
  #     CPU: 8
  #     TPU: 4
  #     memory: 16Gi
  #     'accelerator_type:TPU-V5E': 1
  #     # Hint to Anyscale that this is a multi-host deployment,
  #     # and so we need to set the TPU_WORKER_HOSTNAMES envvar
  #     # to link together all of the hosts in this TPU slice.
  #     'anyscale/tpu_hosts': 4
  #   nodeSelector:
  #     cloud.google.com/gke-tpu-accelerator: tpu-v5-lite-podslice
  #     cloud.google.com/gke-tpu-topology: 4x4
  #     cloud.google.com/gke-spot: "true"

# additionalInstanceTypes provides a list of additional Pod shapes that can be
# used in Anyscale workloads.
additionalInstanceTypes: {}

# additionalPatches provides a list of additional patches that will be respected
# by the operator when creating Pods & other types of Kubernetes resources.
additionalPatches: []

# supported_accelerators provides a mapping of Ray-supported accelerator types
# to accelerator names that can be used in a GPU nodeSelector for scheduling.
supportedAccelerators:
  aws:
    T4: "Tesla-T4"
    A10G: "NVIDIA-A10G"
  azure:
    T4: "NVIDIA-T4"
    A10: "NVIDIA-A10"
    A100: "NVIDIA-A100"
    H100: "NVIDIA-H100"
  gcp:
    V100: "nvidia-tesla-v100"
    P100: "nvidia-tesla-p100"
    T4: "nvidia-tesla-t4"
    L4: "nvidia-l4"
    A100-40G: "nvidia-tesla-a100"
    A100-80G: "nvidia-a100-80gb"
    H100: "nvidia-h100-80gb"
    H100-MEGA: "nvidia-h100-mega-80gb"

# If set to true, then the "topology.kubernetes.io/zone" nodeSelector will be applied
# to all Anyscale workloads with a request to run in a specific zone specified through
# the compute configuration.
#
# This is disabled by default, since many cluster autoscalers do not respect the zone
# node selector when autoscaling (e.g. they do not pick the right subnet to launch an
# instance inside of).
enableZoneNodeSelector: false

# acceleratorNodeSelector provides the nodeSelector key to use when scheduling
# Pods with accelerators. If not set, the default key for the cloud provider
# will be used.
acceleratorNodeSelector: ""

# If set, this service account will be assigned to Pods running Anyscale workloads.
workloadServiceAccountName: ""

# Default tolerances - these match the Anyscale recommended NodeGroup configurations,
# including those provided by the Anyscale Cloud Foundations Terraform Modules
workloadDefaultTolerances:
  all:
    # This may optionally be added to Anyscale workload nodes
    # Allows scheduling on Anyscale's partition of nodes
    node.anyscale.com/capacity-type:
      value: "ON_DEMAND"
      effect: "NoSchedule"
  gpu:
    # GPU workloads can tolerate GPU tainted nodes
    node.anyscale.com/accelerator-type:
      value: "GPU"
      effect: "NoSchedule"
  spot:
    # Spot workloads can tolerate SPOT tainted nodes
    node.anyscale.com/capacity-type:
      value: "SPOT"
      effect: "NoSchedule"

# If set, this will be the address that Anyscale uses for DNS resolution
# for humans (e.g. Anyscale platform users viewing the Ray Dashboard via
# the Anyscale UI) to reach the ingress of this Kubernetes cluster. By
# default, Anyscale will read the address from the status field of the
# Ingress resource created, but in certain cases, that may not be desired.
#
# This is also used for resolving DNS for Anyscale Services.
#
# This can be either an IP address or a hostname.
ingressAddress: ""


# If set to true, this will create a PodDisruptionBudget to avoid
# head node evictions.
# This could block the k8s cluster upgrade or maintenance.
# If enabled, remember to delete the PDB before upgrading the cluster.
enableAnyscaleRayHeadNodePDB: true

enableKarpenterSupport: false

## Gateway related values.

# enableGateway controls whether to enable the gateway functionality.
# When set to true, the load balancing is done through the gateway.
enableGateway: false

# gatewayName specifies the name of the gateway to be used.
# This is used to identify the gateway resource in the k8s cluster.
gatewayName: ""

# gatewayIp specifies the IP address of the gateway.
# This is used for routing traffic through the gateway.
gatewayIp: ""

# gatewayHostname specifies the hostname of the gateway.
# This is used for routing traffic through the gateway.
gatewayHostname: ""
